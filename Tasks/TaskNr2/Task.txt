Напишите программу на языке Java, которая моделирует следующую деятельность:

Создайте программу для учета деятельности коммерческого банка по предоставлению кредитов.
1)	Коммерческий банк имеет несколько филиалов в стране. Каждый филиал характеризуется именем, адресом, телефоном и т. д.
2)	Одной из деятельностей коммерческого банка является предоставление кредитов клиентам. Клиентами могут быть как физические лица, так и юридические лица. Физические лица характеризуются именем, личным кодом, адресом, телефоном. Юридические лица характеризуются налоговым идентификационным номером, наименованием, типом собственности, адресом, телефоном, именем администратора, контактным лицом и т. д.
3)	Каждый кредит определяется типом кредита, наименованием, валютой и годовой процентной ставкой. Для каждого предоставленного кредита заключается договор, который содержит его номер, дату, клиента, тип кредита, общую сумму кредита и срок полного погашения суммы.
4)	Программа должна обеспечивать учет этих кредитов, расчет дохода банка, который должен быть конвертирован и представлен в местной валюте и т. д. За каждый заключенный договор сотрудник банка получает определенный процент от общей суммы предоставленного кредита.
Требования к заданию: Реализуйте концепции ООП
1)	Создайте классы с методами (функциями) для чтения и вывода каждого поля (сеттеры и геттеры), а также метод, который вычисляет новое значение одного или нескольких полей (например, конвертирует цену из лей в евро или рассчитывает продолжительность поездки). Добавьте как минимум три вида конструкторов (один без параметров, второй со всеми указанными параметрами, третий с несколькими указанными параметрами, в зависимости от темы, в последнем случае некоторые поля могут иметь одинаковые значения или некоторые стандартные значения).
2)	Классы, наследующие поля и методы родительского класса, будут иметь свои собственные свойства, создавая соответствующие конструкторы (соответствующие конструкторы базового класса). Используйте отношения ассоциации и агрегации между объектами (где это необходимо).
3)	Создайте абстрактный класс и интерфейс, содержащий хотя бы один абстрактный метод, а затем унаследуйте их в процессе наследования и полностью реализуйте. Каждый класс должен содержать перегруженные конструкторы и переопределенный метод toString().
4)	Обработайте различные типы исключений (например, при делении на ноль, извлечении корня из отрицательного числа, попытке доступа к несуществующему элементу массива, вводе пользователем букв вместо чисел, вызове метода объекта с нулевой ссылкой и т. д.). Создайте собственное исключение.
5)	Запишите объекты в список, не менее 20 записей. Используйте список для вывода на экран.
6)	Программа должна содержать минимальное меню.
7)	Если необходимо, добавьте классы, члены или методы к существующим классам.